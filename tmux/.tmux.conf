# make tmux render 24bit colors
set-option -sa terminal-overrides ",xterm*:Tc"

# add mouse and scroll support
set -g mouse on

# change leader to ctrl + space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# status bar to the top
set-option -g status-position top


# seamless navigation with (n)vim panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# new windows to Ctrl + t
bind-key -n C-t new-window

# shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window


# theme
set -g @catppuccin_flavour 'mocha'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tmux-yank'


# set vi-mode
set-window-option -g mode-keys vi
# keybindings so that copy paste DOESN'T SUCK
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# make split panes open in the same path as mother pane
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"


# Save the previous pane
bind-key -n M-f run-shell 'tmux set -g @previous-pane "#{pane_id}"'

# Switch to the previous pane and re-run the last command
# it checks if the variable was set with the previous command and then runs !! and enter in the previous pane
bind-key -n M-g run-shell 'if [ "$(tmux show -gqv @previous-pane)" != "" ]; then tmux select-pane -t "$(tmux show -gqv @previous-pane)"; tmux send-keys "!!" Enter; fi'


# load tmux plugin manager (always keep this on bottom)
run '~/.tmux/plugins/tpm/tpm'
